% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sat_outlier_detect.R
\name{sat_outlier_detect}
\alias{sat_outlier_detect}
\title{Satellite Outlier Detect}
\usage{
sat_outlier_detect(x, wt, index = NULL, tr = TRUE,
  seasonal_periods = c(24, 168), iqr_scaling_factor = c(1.5, 3),
  iqr_range = c(0.25, 0.75))
}
\arguments{
\item{x}{A numeric vector of length n. The original time series.}

\item{wt}{A numeric vector of length n. A vector of optional weights}

\item{index}{A vector of Dates for the time series}

\item{tr}{logical. Whether an arcsinh transformation is applied to the residuals}

\item{seasonal_periods}{A numeric vector. The seasonal periods to use for
time series decomposition}

\item{iqr_scaling_factor}{A numeric vector. The scaling range for the IQR
multiplier. This scales the wt parameter.}

\item{iqr_range}{A numeric vector. The range to use in calculating the IQR.}
}
\value{
a dataframe containing the original data with residual information
and outlier flags.
}
\description{
A function for time series outlier detection.
}
\details{
The function takes a vector of time series observations and applies multiple
period time series decomposition using a robust version of STL decomposition.
An inverse hyperbolic sine transformation is applied to the residuals to restore
some normality and allow the use of an Inner Quantile Range to be calculated for
outlier detection. Rather than the standard 3 * IQR, a weighted vector is
accepted to allow variation in the IQR multipler between two fixed limits set
by the user.
}
\examples{
data("google_analytics_data")
fit <- sat_outlier_detect(x = google_analytics_data$conversion_rate,
                          wt = google_analytics_data$sessions,
                          index = google_analytics_data$ds,
                          tr = TRUE)

\dontrun{
library(ggplot2)
library(dplyr)

ggplot(fit, aes(index, data)) +
  geom_line(lwd = 0.2) +
  geom_point(data = filter(fit, outlier == "Yes"),
             aes(index, data),
             colour = "red",
             size = 1) +
  geom_ribbon(aes(x = index,
                 ymin = (data - residuals + resid_lower),
                 ymax = (data - residuals + resid_upper)),
              fill = "light blue",
              alpha = 0.6) +
  theme_light() +
  scale_y_continuous(labels = scales::percent) +
  labs(title = "Where are outliers occuring in my Google Analytics Data?",
       subtitle = "3 months of eCommerce conversion rate data",
       x = "date",
       y = "eCommerce Conversion Rate")
}
}
